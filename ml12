import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# Load dataset (Heart Disease Dataset from UCI)

url = "https://archive.ics.uci.edu/ml/machine-learning-databases/heart-
disease/processed.cleveland.data"

columns = ['age', 'sex', 'cp', 'trestbps', 'chol', 'fbs', 'restecg', 'thalach',
'exang', 'oldpeak', 'slope', 'ca', 'thal', 'target']
df = pd.read_csv(url, names=columns, na_values="?")
# 1. Basic dataset info (reduced)
print("Dataset Shape:", df.shape)
print("\nFirst 5 Rows:\n", df.head())
# 2. Handle missing values
df.dropna(inplace=True)
# 3. Check class distribution
plt.figure(figsize=(5, 3))
sns.countplot(x=df['target'], palette="viridis")
plt.title("Class Distribution")
plt.xlabel("Target Class (0: No Disease, 1-4: Disease)")
plt.ylabel("Count")

61

plt.show()
# 4. Show correlation of top features (reduce output)
correlation = df.corr()['target'].abs().sort_values(ascending=False)
print("\nTop Correlated Features with Target:\n", correlation.head(6))
# 5. Boxplot of select features (outlier detection)
selected_features = ['age', 'trestbps', 'chol', 'thalach', 'oldpeak']
plt.figure(figsize=(10, 5))
sns.boxplot(data=df[selected_features])
plt.xticks(rotation=90)
plt.title("Boxplot of Selected Features")
plt.show()
Top Correlated Features with Target:
62
target 1.000000
ca 0.521178
thal 0.513377
oldpeak 0.501461
thalach 0.420639
cp 0.404248
Name: target, dtype: float64
